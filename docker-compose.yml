version: "3.9"
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 80:80
    volumes:
      - ./:/var/www
    networks: 
      - app
    stop_signal: SIGKILL
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  postgres:
    image: postgis/postgis:15-3.3
    ports:
      - 5432:5432
    volumes: 
      - /var/lib/postgres15/data:/var/lib/postgres15/data
    env_file: ./postgres.env
    networks:
      - app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER && psql -U $$POSTGRES_USER -c 'SELECT pg_is_in_recovery();' | grep -q 'f'"]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 3
  redis:
    image: redis:6.2.1-alpine
    ports: 
      - 6379:6379
    networks:
      - app
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 3
  rabbitmq:
    image: rabbitmq:3.8-alpine
    ports:
      - 5672:5672
    networks: 
      - app
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 3
  mailcatcher:
    image: schickling/mailcatcher:latest
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - app
networks: 
  app:
    driver: bridge
