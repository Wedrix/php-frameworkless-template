--- /dev/null
+++ ../src/Mapping/ReflectionEmbeddedProperty.php
@@ -49,13 +49,16 @@
     #[ReturnTypeWillChange]
     public function getValue($object = null)
     {
-        $embeddedObject = $this->parentProperty->getValue($object);
+        $embeddedObject = ! $this->parentProperty->getDeclaringClass()->isInstance($object) ||
+        $this->parentProperty->isInitialized($object) ?
+            $this->parentProperty->getValue($object) :
+            null;
 
         if ($embeddedObject === null) {
             return null;
         }
 
-        return $this->childProperty->getValue($embeddedObject);
+        return $this->childProperty->isInitialized($embeddedObject) ? $this->childProperty->getValue($embeddedObject) : null;
     }
 
     /**
@@ -66,7 +69,21 @@
     #[ReturnTypeWillChange]
     public function setValue($object, $value = null)
     {
-        $embeddedObject = $this->parentProperty->getValue($object);
+        if ($value === null &&
+            $this->parentProperty->hasType() &&
+            $this->childProperty->hasType() &&
+            $this->parentProperty->getType()->allowsNull() &&
+            ! $this->childProperty->getType()->allowsNull()
+        ) {
+            $this->parentProperty->setValue($object, null);
+
+            return;
+        }
+
+        $embeddedObject = ! $this->parentProperty->getDeclaringClass()->isInstance($object) ||
+        $this->parentProperty->isInitialized($object) ?
+            $this->parentProperty->getValue($object) :
+            null;
 
         if ($embeddedObject === null) {
             $this->instantiator = $this->instantiator ?: new Instantiator();
